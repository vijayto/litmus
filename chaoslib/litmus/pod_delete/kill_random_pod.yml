- block:

    - name: "[Prepare]: Getting list of all pods with {{ app_label }} label from {{ app_ns }} namespace"
      k8s_facts:
        kind: Pod
        namespace: "{{ app_ns }}"
        label_selectors:
          - "{{ app_label }}"
        field_selectors:
          - status.phase=Running
      register: pod_list

    - name: "[Prepare]: Trying to the target application pod.."
      set_fact:
        target_pod_list: []

    - block: 

        - name: "[Prepare]: Select a random pod to kill"
          set_fact:
            app_pod_random: "{{ pod_list.resources | random | json_query('metadata.name') }}"

        - name: "[Prepare]: Adding {{ app_pod_random }} pod as a chaos candidate"
          set_fact: 
            target_pod_list: "{{ target_pod_list + [app_pod_random] }}"
  
        - set_fact:
            app_pod: "{{ target_pod_list | join(' ') }}" 

      when: "kill_count is not defined or kill_count == ''"

    - block: 

        - name: "[Prepare]: Adding mutiple pods as chaos candidates"
          set_fact:
            target_pod_list: "{{ target_pod_list + [resource | json_query('metadata.name')] }}"
          loop: "{{ pod_list.resources }}"
          loop_control: 
            loop_var: resource 

        - set_fact:
            app_pod: "{{ target_pod_list[0:(kill_count|int)] | join(' ') }}" 

      when: "kill_count is defined and kill_count != ''"

  when: "app_pod_name is not defined or app_pod_name == ''"

- block:

    - name: "[Prepare]: Recording the application pod name"
      set_fact:
        app_pod: "{{ app_pod_name }}"

  when: "app_pod_name is defined and app_pod_name != ''"

## RECORD EVENT FOR CHAOS INJECTION
- name: "[Event]: Generating an Event for ChaosInjection"
  include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
  vars:
    stage: "ChaosInject"
    exp_pod_name: "{{ chaos_pod_name }}"
    engine_ns: "{{ c_ns }}"
    message: "Injecting {{ c_experiment }} chaos on {{ app_pod }} pod"
  when: "c_engine is defined and c_engine != ''"

- debug:
    msg: "Killing {{ app_pod }} pod"

- name: "[Inject]: Killing the application pod forcefullly"
  shell: |
    kubectl delete pod -n {{ app_ns }} --force --grace-period=0 --wait=false {{ app_pod }}
  args:
    executable: /bin/bash
  register: result
  when: "c_force is defined and c_force == 'true'"

- name: "[Inject]: Killing the application pod"
  shell: |
    kubectl delete pod -n {{ app_ns }} --grace-period=0 --wait=false {{ app_pod }}
  args:
    executable: /bin/bash
  register: result
  when: "c_force is not defined or c_force == 'false' or c_force == ''" 

- name: "[Wait]: Wait for the chaos interval {{ c_interval }}s"
  pause:
    seconds: "{{ c_interval }}"

- name: "[Status]: Verification for the recreation of application pod"
  include_tasks: "/utils/common/status_app_pod.yml"
  vars:
    delay: 2
    retries: 90   
  when: "type is defined and type != ''"
